import javax.crypto.*;
import javax.crypto.spec.IvParameterSpec;
import java.security.*;
import java.util.Arrays;

public class AES {
    private Key key;
    private IvParameterSpec iv;
    private byte[] encryptedBytes;
    private byte[] decryptedBytes;

    public AES(){
        this.generateKey();
        this.generateIv();
    }

    public void generateKey(){
        try {
            KeyGenerator generator = KeyGenerator.getInstance("AES");
            generator.init(256);
            this.key = generator.generateKey();
        }
        catch(NoSuchAlgorithmException e){
            e.printStackTrace();
        }
    }

    public void generateIv(){
        byte[] iv = new byte[16];
        new SecureRandom().nextBytes(iv);
        this.iv = new IvParameterSpec(iv);
    }

    public byte[] encrypt(byte[] bytes){
        try {
            Cipher encryptCipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
            encryptCipher.init(Cipher.ENCRYPT_MODE, this.key, this.iv);

            this.encryptedBytes = encryptCipher.doFinal(bytes);
        }
        catch(InvalidKeyException | NoSuchAlgorithmException | NoSuchPaddingException | IllegalBlockSizeException |
              BadPaddingException | InvalidAlgorithmParameterException e){
            e.printStackTrace();
        }
        return this.encryptedBytes;
    }

    public byte[] decrypt(byte[] bytes){
        try {
            Cipher decryptCipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
            decryptCipher.init(Cipher.DECRYPT_MODE, this.key, this.iv);

            this.decryptedBytes = decryptCipher.doFinal(bytes);
        }
        catch(InvalidKeyException | NoSuchAlgorithmException | NoSuchPaddingException | IllegalBlockSizeException |
              BadPaddingException | InvalidAlgorithmParameterException e){
            e.printStackTrace();
        }
        return this.decryptedBytes;
    }
}
