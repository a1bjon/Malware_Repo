import javax.crypto.*;
import javax.crypto.spec.IvParameterSpec;
import java.security.*;
import java.util.Base64;

public class AES {
    private Key key;
    private IvParameterSpec iv;
    private String encryptedText;
    private String decryptedText;

    private void generateKey(){
        try {
            KeyGenerator generator = KeyGenerator.getInstance("AES");
            generator.init(256);
            this.key = generator.generateKey();
        }
        catch(NoSuchAlgorithmException e){
            e.printStackTrace();
        }
    }

    private void generateIv(){
        byte[] iv = new byte[16];
        new SecureRandom().nextBytes(iv);
        this.iv = new IvParameterSpec(iv);
    }

    public String encrypt(String plainText){
        this.generateIv();
        this.generateKey();
        try {
            Cipher encryptCipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
            encryptCipher.init(Cipher.ENCRYPT_MODE, this.key, this.iv);

            byte[] textBytes = plainText.getBytes();
            byte[] encryptedTextBytes = encryptCipher.doFinal(textBytes);

            this.encryptedText = Base64.getEncoder().encodeToString(encryptedTextBytes);
        }
        catch(InvalidKeyException | NoSuchAlgorithmException | NoSuchPaddingException | IllegalBlockSizeException |
              BadPaddingException | InvalidAlgorithmParameterException e){
            e.printStackTrace();
        }
        return this.encryptedText;
    }

    public String decrypt(String text){
        try {
            Cipher decryptCipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
            decryptCipher.init(Cipher.DECRYPT_MODE, this.key, this.iv);

            byte[] textBytes = Base64.getDecoder().decode(text);
            byte[] decryptedTextBytes = decryptCipher.doFinal(textBytes);

            this.decryptedText = new String(decryptedTextBytes);
        }

        catch(InvalidKeyException | NoSuchAlgorithmException | NoSuchPaddingException | IllegalBlockSizeException |
              BadPaddingException | InvalidAlgorithmParameterException e){
            e.printStackTrace();
        }
        return this.decryptedText;
    }
}
